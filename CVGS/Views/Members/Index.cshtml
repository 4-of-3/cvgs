@model IEnumerable<CVGS.Models.MEMBER>

@{
    ViewBag.Title = "Members";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("SearchFriends", "Friends"))
{
    <p>
        <input id="username" type="text" placeholder="Search" name="username" class="search-bar pull-right">
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Username", "Index", new { sort = "username", order = @ViewBag.listSortAsc })
        </th>
        <th>
            @Html.ActionLink("Name", "Index", new { sort = "name", order = @ViewBag.listSortAsc })
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { sort = "email", order = @ViewBag.listSortAsc })
        </th>
        <th>
            @Html.ActionLink("Role", "Index", new { sort = "role", order = @ViewBag.listSortAsc })
        </th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.ActionLink(item.UserName, "Details", new { id = item.MemberId })<br />
            <small class="text-muted">
                <em>
                    @Html.DisplayFor(modelItem => item.ROLE.RoleName) since @Html.DisplayFor(modelItem => item.DateJoined)
                    @if (!item.ActiveStatus)
                    {
                        <br />
                        <span class="text-warning">Account Deactivated</span>
                    }
                </em>
            </small>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FName) @Html.DisplayFor(modelItem => item.LName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ROLE.RoleName)
        </td>
        <td>
            @if (item.MemberId != (int)Session["MemberId"])
            {
                if (item.FRIENDSHIPs2.Select(m => m.MemberId).ToList().Contains((int)Session["MemberId"]))
                {
                    //Member is already in friends list
                    <a href="@Url.Action("RemoveFriend", "Friends", new { id = item.MemberId })">Remove Friend</a>
                }
                else
                {
                    //Member is not in friends list
                    <a href="@Url.Action("AddFriend", "Friends", new { id = item.MemberId })">Add Friend</a>

                }
                if ((string)Session["MemberRole"] == "Admin")
                {
                    @:| @Html.ActionLink("Change member role", "Role", new { id = item.MemberId })
                }
            }
        </td>
        <td style="width: 1px; white-space: nowrap">
            <a href="@Url.Action("Details", new {id = item.MemberId})" class="btn btn--action btn--empty btn--inline">
                <i class="fa fa-search"></i>
            </a>
        </td>
    </tr>
}

</table>
