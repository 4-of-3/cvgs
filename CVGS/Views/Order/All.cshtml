@model IEnumerable<CVGS.Models.ORDERHEADER>

@{
    ViewBag.Title = "All Orders";
}

<h2>@ViewBag.Title</h2>

@if (TempData["error"] != null)
{
    <div class="alert alert-danger">
        @TempData["error"]
    </div>
}

<div class="action-bar" style="margin-bottom: 10px;">
    <a href="@Url.Action("Index", "Employee")" class="btn btn--default">
        <i class="fa fa-arrow-left"></i>Dashboard
    </a>
    <div class="actions">
        <a href="@Url.Action("Pending")" class="btn btn--action">
            <i class="fa fa-spinner"></i>Pending Orders
        </a>
    </div>
</div>

@if (Model.Count() > 0)
{
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.DateCreated).ToHtmlString(), "All", new { search = ViewBag.search, sort = "date", order = @ViewBag.listSortAsc })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Processed).ToHtmlString(), "All", new { search = ViewBag.search, sort = "processed", order = @ViewBag.listSortAsc })
            </th>
            <th>
                @Html.ActionLink("Billing Address", "All", new { search = ViewBag.search, sort = "billaddr", order = @ViewBag.listSortAsc })
            </th>
            <th>
                @Html.ActionLink("Shipping Address", "All", new { search = ViewBag.search, sort = "shipaddr", order = @ViewBag.listSortAsc })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.CREDITCARD.CardNumber).ToHtmlString(), "All", new { search = ViewBag.search, sort = "cc", order = @ViewBag.listSortAsc })
            </th>
            <th>
                @Html.ActionLink("Name", "All", new { search = ViewBag.search, sort = "name", order = @ViewBag.listSortAsc })
            </th>
            <th>
                @Html.ActionLink("Cost", "All", new { search = ViewBag.search, sort = "cost", order = @ViewBag.listSortAsc })
            </th>
            <th style="width: 1px;"></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    @((item.Processed) ? "Yes" : "No")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ADDRESS.StreetAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ADDRESS1.StreetAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CREDITCARD.CardNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MEMBER.FullName)
                </td>
                <td>
                    @(item.ORDERITEMs.Sum(i => i.Quantity * i.GAME.Cost).ToString("C"))
                </td>
                <td style="white-space: nowrap;">
                    <a href="@Url.Action("Details", new { id = item.OrderId })" class="btn btn--action btn--inline btn--empty">
                        <i class="fa fa-search"></i>
                    </a>
                    @if (!item.Processed)
                    {
                        <a href="@Url.Action("Delete", new { id = item.OrderId })" class="btn btn--delete btn--inline btn--empty">
                            <i class="fa fa-trash"></i>
                        </a>
                    }
                </td>
            </tr>
        }

    </table>
}
else
{
    <hr />
    <h4>There are no orders.</h4>
}