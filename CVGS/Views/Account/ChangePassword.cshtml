@model CVGS.ViewModels.ChangePasswordViewModel

@{
    ViewBag.Title = "Change Password";
}

<div class="page-blur"></div>
<section class="auth__container">
    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.OldPwd, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.OldPwd, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.OldPwd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.NewPwd, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.NewPwd, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.NewPwd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.NewPwdCheck, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.NewPwdCheck, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.NewPwdCheck, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-12">
                    <input type="submit" value="Change Password" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</section>
